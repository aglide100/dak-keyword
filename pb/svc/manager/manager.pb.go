// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pb/svc/manager/manager.proto

package manager

import (
	context "context"
	job "github.com/aglide100/dak-keyword/pb/unit/job"
	worker "github.com/aglide100/dak-keyword/pb/unit/worker"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNewJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Owner   string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *CreateNewJobReq) Reset() {
	*x = CreateNewJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewJobReq) ProtoMessage() {}

func (x *CreateNewJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewJobReq.ProtoReflect.Descriptor instead.
func (*CreateNewJobReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNewJobReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CreateNewJobReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type CreateNewJobRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  []string `protobuf:"bytes,1,rep,name=keyword,proto3" json:"keyword,omitempty"`
	WorkerId []string `protobuf:"bytes,2,rep,name=workerId,proto3" json:"workerId,omitempty"`
	JobId    string   `protobuf:"bytes,3,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (x *CreateNewJobRes) Reset() {
	*x = CreateNewJobRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewJobRes) ProtoMessage() {}

func (x *CreateNewJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewJobRes.ProtoReflect.Descriptor instead.
func (*CreateNewJobRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewJobRes) GetKeyword() []string {
	if x != nil {
		return x.Keyword
	}
	return nil
}

func (x *CreateNewJobRes) GetWorkerId() []string {
	if x != nil {
		return x.WorkerId
	}
	return nil
}

func (x *CreateNewJobRes) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type GetJobStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *GetJobStatusReq) Reset() {
	*x = GetJobStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusReq) ProtoMessage() {}

func (x *GetJobStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusReq.ProtoReflect.Descriptor instead.
func (*GetJobStatusReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{2}
}

func (x *GetJobStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobStatusReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type GetJobStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetJobStatusRes) Reset() {
	*x = GetJobStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusRes) ProtoMessage() {}

func (x *GetJobStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusRes.ProtoReflect.Descriptor instead.
func (*GetJobStatusRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{3}
}

func (x *GetJobStatusRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StopJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopJobReq) Reset() {
	*x = StopJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobReq) ProtoMessage() {}

func (x *StopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobReq.ProtoReflect.Descriptor instead.
func (*StopJobReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{4}
}

func (x *StopJobReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopJobRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StopJobRes) Reset() {
	*x = StopJobRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobRes) ProtoMessage() {}

func (x *StopJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobRes.ProtoReflect.Descriptor instead.
func (*StopJobRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{5}
}

func (x *StopJobRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DoneScraperReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DoneScraperReq) Reset() {
	*x = DoneScraperReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneScraperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneScraperReq) ProtoMessage() {}

func (x *DoneScraperReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneScraperReq.ProtoReflect.Descriptor instead.
func (*DoneScraperReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{6}
}

func (x *DoneScraperReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DoneScraperRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DoneScraperRes) Reset() {
	*x = DoneScraperRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneScraperRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneScraperRes) ProtoMessage() {}

func (x *DoneScraperRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneScraperRes.ProtoReflect.Descriptor instead.
func (*DoneScraperRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{7}
}

func (x *DoneScraperRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DoneAnalyzerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DoneAnalyzerReq) Reset() {
	*x = DoneAnalyzerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneAnalyzerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneAnalyzerReq) ProtoMessage() {}

func (x *DoneAnalyzerReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneAnalyzerReq.ProtoReflect.Descriptor instead.
func (*DoneAnalyzerReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{8}
}

func (x *DoneAnalyzerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DoneAnalyzerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DoneAnalyzerRes) Reset() {
	*x = DoneAnalyzerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneAnalyzerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneAnalyzerRes) ProtoMessage() {}

func (x *DoneAnalyzerRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneAnalyzerRes.ProtoReflect.Descriptor instead.
func (*DoneAnalyzerRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{9}
}

func (x *DoneAnalyzerRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UpdateJobStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateJobStatusReq) Reset() {
	*x = UpdateJobStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusReq) ProtoMessage() {}

func (x *UpdateJobStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateJobStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateJobStatusReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateJobStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateJobStatusRes) Reset() {
	*x = UpdateJobStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusRes) ProtoMessage() {}

func (x *UpdateJobStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusRes.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateJobStatusRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetJobListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetJobListReq) Reset() {
	*x = GetJobListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobListReq) ProtoMessage() {}

func (x *GetJobListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobListReq.ProtoReflect.Descriptor instead.
func (*GetJobListReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{12}
}

type GetJobListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job []*job.Job `protobuf:"bytes,1,rep,name=Job,proto3" json:"Job,omitempty"`
}

func (x *GetJobListRes) Reset() {
	*x = GetJobListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobListRes) ProtoMessage() {}

func (x *GetJobListRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobListRes.ProtoReflect.Descriptor instead.
func (*GetJobListRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{13}
}

func (x *GetJobListRes) GetJob() []*job.Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetWorkerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkerListReq) Reset() {
	*x = GetWorkerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerListReq) ProtoMessage() {}

func (x *GetWorkerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerListReq.ProtoReflect.Descriptor instead.
func (*GetWorkerListReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorkerListReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWorkerListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker []*worker.Worker `protobuf:"bytes,1,rep,name=Worker,proto3" json:"Worker,omitempty"`
}

func (x *GetWorkerListRes) Reset() {
	*x = GetWorkerListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerListRes) ProtoMessage() {}

func (x *GetWorkerListRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerListRes.ProtoReflect.Descriptor instead.
func (*GetWorkerListRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_manager_proto_rawDescGZIP(), []int{15}
}

func (x *GetWorkerListRes) GetWorker() []*worker.Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

var File_pb_svc_manager_manager_proto protoreflect.FileDescriptor

var file_pb_svc_manager_manager_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x15,
	0x70, 0x62, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6a, 0x6f, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x62, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x77, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x29, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x0e,
	0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28,
	0x0a, 0x0e, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x65,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x44,
	0x6f, 0x6e, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x4a, 0x6f, 0x62, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x32, 0x8d, 0x05, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x12, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x12, 0x50,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x59, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0b,
	0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6e,
	0x65, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6e,
	0x65, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x44,
	0x6f, 0x6e, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6e,
	0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x6f,
	0x6e, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x67, 0x6c, 0x69, 0x64, 0x65, 0x31, 0x30, 0x30, 0x2f, 0x64, 0x61, 0x6b, 0x2d, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_svc_manager_manager_proto_rawDescOnce sync.Once
	file_pb_svc_manager_manager_proto_rawDescData = file_pb_svc_manager_manager_proto_rawDesc
)

func file_pb_svc_manager_manager_proto_rawDescGZIP() []byte {
	file_pb_svc_manager_manager_proto_rawDescOnce.Do(func() {
		file_pb_svc_manager_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_svc_manager_manager_proto_rawDescData)
	})
	return file_pb_svc_manager_manager_proto_rawDescData
}

var file_pb_svc_manager_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pb_svc_manager_manager_proto_goTypes = []interface{}{
	(*CreateNewJobReq)(nil),    // 0: pb.svc.manager.CreateNewJobReq
	(*CreateNewJobRes)(nil),    // 1: pb.svc.manager.CreateNewJobRes
	(*GetJobStatusReq)(nil),    // 2: pb.svc.manager.GetJobStatusReq
	(*GetJobStatusRes)(nil),    // 3: pb.svc.manager.GetJobStatusRes
	(*StopJobReq)(nil),         // 4: pb.svc.manager.StopJobReq
	(*StopJobRes)(nil),         // 5: pb.svc.manager.StopJobRes
	(*DoneScraperReq)(nil),     // 6: pb.svc.manager.DoneScraperReq
	(*DoneScraperRes)(nil),     // 7: pb.svc.manager.DoneScraperRes
	(*DoneAnalyzerReq)(nil),    // 8: pb.svc.manager.DoneAnalyzerReq
	(*DoneAnalyzerRes)(nil),    // 9: pb.svc.manager.DoneAnalyzerRes
	(*UpdateJobStatusReq)(nil), // 10: pb.svc.manager.UpdateJobStatusReq
	(*UpdateJobStatusRes)(nil), // 11: pb.svc.manager.UpdateJobStatusRes
	(*GetJobListReq)(nil),      // 12: pb.svc.manager.GetJobListReq
	(*GetJobListRes)(nil),      // 13: pb.svc.manager.GetJobListRes
	(*GetWorkerListReq)(nil),   // 14: pb.svc.manager.GetWorkerListReq
	(*GetWorkerListRes)(nil),   // 15: pb.svc.manager.GetWorkerListRes
	(*job.Job)(nil),            // 16: pb.unit.job.Job
	(*worker.Worker)(nil),      // 17: pb.unit.worker.Worker
}
var file_pb_svc_manager_manager_proto_depIdxs = []int32{
	16, // 0: pb.svc.manager.GetJobListRes.Job:type_name -> pb.unit.job.Job
	17, // 1: pb.svc.manager.GetWorkerListRes.Worker:type_name -> pb.unit.worker.Worker
	0,  // 2: pb.svc.manager.Manager.CreateNewJob:input_type -> pb.svc.manager.CreateNewJobReq
	2,  // 3: pb.svc.manager.Manager.GetJobStatus:input_type -> pb.svc.manager.GetJobStatusReq
	12, // 4: pb.svc.manager.Manager.GetJobList:input_type -> pb.svc.manager.GetJobListReq
	14, // 5: pb.svc.manager.Manager.GetWorkerList:input_type -> pb.svc.manager.GetWorkerListReq
	10, // 6: pb.svc.manager.Manager.UpdateJobStatus:input_type -> pb.svc.manager.UpdateJobStatusReq
	6,  // 7: pb.svc.manager.Manager.DoneScraper:input_type -> pb.svc.manager.DoneScraperReq
	8,  // 8: pb.svc.manager.Manager.DoneAnalyzer:input_type -> pb.svc.manager.DoneAnalyzerReq
	4,  // 9: pb.svc.manager.Manager.StopJob:input_type -> pb.svc.manager.StopJobReq
	1,  // 10: pb.svc.manager.Manager.CreateNewJob:output_type -> pb.svc.manager.CreateNewJobRes
	3,  // 11: pb.svc.manager.Manager.GetJobStatus:output_type -> pb.svc.manager.GetJobStatusRes
	13, // 12: pb.svc.manager.Manager.GetJobList:output_type -> pb.svc.manager.GetJobListRes
	15, // 13: pb.svc.manager.Manager.GetWorkerList:output_type -> pb.svc.manager.GetWorkerListRes
	11, // 14: pb.svc.manager.Manager.UpdateJobStatus:output_type -> pb.svc.manager.UpdateJobStatusRes
	7,  // 15: pb.svc.manager.Manager.DoneScraper:output_type -> pb.svc.manager.DoneScraperRes
	9,  // 16: pb.svc.manager.Manager.DoneAnalyzer:output_type -> pb.svc.manager.DoneAnalyzerRes
	5,  // 17: pb.svc.manager.Manager.StopJob:output_type -> pb.svc.manager.StopJobRes
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_pb_svc_manager_manager_proto_init() }
func file_pb_svc_manager_manager_proto_init() {
	if File_pb_svc_manager_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_svc_manager_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewJobRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopJobRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneScraperReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneScraperRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneAnalyzerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneAnalyzerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_svc_manager_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_svc_manager_manager_proto_goTypes,
		DependencyIndexes: file_pb_svc_manager_manager_proto_depIdxs,
		MessageInfos:      file_pb_svc_manager_manager_proto_msgTypes,
	}.Build()
	File_pb_svc_manager_manager_proto = out.File
	file_pb_svc_manager_manager_proto_rawDesc = nil
	file_pb_svc_manager_manager_proto_goTypes = nil
	file_pb_svc_manager_manager_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManagerClient is the client API for Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerClient interface {
	CreateNewJob(ctx context.Context, in *CreateNewJobReq, opts ...grpc.CallOption) (*CreateNewJobRes, error)
	GetJobStatus(ctx context.Context, in *GetJobStatusReq, opts ...grpc.CallOption) (*GetJobStatusRes, error)
	GetJobList(ctx context.Context, in *GetJobListReq, opts ...grpc.CallOption) (*GetJobListRes, error)
	GetWorkerList(ctx context.Context, in *GetWorkerListReq, opts ...grpc.CallOption) (*GetWorkerListRes, error)
	UpdateJobStatus(ctx context.Context, in *UpdateJobStatusReq, opts ...grpc.CallOption) (*UpdateJobStatusRes, error)
	DoneScraper(ctx context.Context, in *DoneScraperReq, opts ...grpc.CallOption) (*DoneScraperRes, error)
	DoneAnalyzer(ctx context.Context, in *DoneAnalyzerReq, opts ...grpc.CallOption) (*DoneAnalyzerRes, error)
	StopJob(ctx context.Context, in *StopJobReq, opts ...grpc.CallOption) (*StopJobRes, error)
}

type managerClient struct {
	cc grpc.ClientConnInterface
}

func NewManagerClient(cc grpc.ClientConnInterface) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) CreateNewJob(ctx context.Context, in *CreateNewJobReq, opts ...grpc.CallOption) (*CreateNewJobRes, error) {
	out := new(CreateNewJobRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/CreateNewJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetJobStatus(ctx context.Context, in *GetJobStatusReq, opts ...grpc.CallOption) (*GetJobStatusRes, error) {
	out := new(GetJobStatusRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/GetJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetJobList(ctx context.Context, in *GetJobListReq, opts ...grpc.CallOption) (*GetJobListRes, error) {
	out := new(GetJobListRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/GetJobList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetWorkerList(ctx context.Context, in *GetWorkerListReq, opts ...grpc.CallOption) (*GetWorkerListRes, error) {
	out := new(GetWorkerListRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/GetWorkerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) UpdateJobStatus(ctx context.Context, in *UpdateJobStatusReq, opts ...grpc.CallOption) (*UpdateJobStatusRes, error) {
	out := new(UpdateJobStatusRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/UpdateJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) DoneScraper(ctx context.Context, in *DoneScraperReq, opts ...grpc.CallOption) (*DoneScraperRes, error) {
	out := new(DoneScraperRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/DoneScraper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) DoneAnalyzer(ctx context.Context, in *DoneAnalyzerReq, opts ...grpc.CallOption) (*DoneAnalyzerRes, error) {
	out := new(DoneAnalyzerRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/DoneAnalyzer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) StopJob(ctx context.Context, in *StopJobReq, opts ...grpc.CallOption) (*StopJobRes, error) {
	out := new(StopJobRes)
	err := c.cc.Invoke(ctx, "/pb.svc.manager.Manager/StopJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagerServer is the server API for Manager service.
type ManagerServer interface {
	CreateNewJob(context.Context, *CreateNewJobReq) (*CreateNewJobRes, error)
	GetJobStatus(context.Context, *GetJobStatusReq) (*GetJobStatusRes, error)
	GetJobList(context.Context, *GetJobListReq) (*GetJobListRes, error)
	GetWorkerList(context.Context, *GetWorkerListReq) (*GetWorkerListRes, error)
	UpdateJobStatus(context.Context, *UpdateJobStatusReq) (*UpdateJobStatusRes, error)
	DoneScraper(context.Context, *DoneScraperReq) (*DoneScraperRes, error)
	DoneAnalyzer(context.Context, *DoneAnalyzerReq) (*DoneAnalyzerRes, error)
	StopJob(context.Context, *StopJobReq) (*StopJobRes, error)
}

// UnimplementedManagerServer can be embedded to have forward compatible implementations.
type UnimplementedManagerServer struct {
}

func (*UnimplementedManagerServer) CreateNewJob(context.Context, *CreateNewJobReq) (*CreateNewJobRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewJob not implemented")
}
func (*UnimplementedManagerServer) GetJobStatus(context.Context, *GetJobStatusReq) (*GetJobStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatus not implemented")
}
func (*UnimplementedManagerServer) GetJobList(context.Context, *GetJobListReq) (*GetJobListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobList not implemented")
}
func (*UnimplementedManagerServer) GetWorkerList(context.Context, *GetWorkerListReq) (*GetWorkerListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkerList not implemented")
}
func (*UnimplementedManagerServer) UpdateJobStatus(context.Context, *UpdateJobStatusReq) (*UpdateJobStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobStatus not implemented")
}
func (*UnimplementedManagerServer) DoneScraper(context.Context, *DoneScraperReq) (*DoneScraperRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoneScraper not implemented")
}
func (*UnimplementedManagerServer) DoneAnalyzer(context.Context, *DoneAnalyzerReq) (*DoneAnalyzerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoneAnalyzer not implemented")
}
func (*UnimplementedManagerServer) StopJob(context.Context, *StopJobReq) (*StopJobRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJob not implemented")
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_CreateNewJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).CreateNewJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/CreateNewJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).CreateNewJob(ctx, req.(*CreateNewJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/GetJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetJobStatus(ctx, req.(*GetJobStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetJobList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetJobList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/GetJobList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetJobList(ctx, req.(*GetJobListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetWorkerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkerListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetWorkerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/GetWorkerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetWorkerList(ctx, req.(*GetWorkerListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_UpdateJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).UpdateJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/UpdateJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).UpdateJobStatus(ctx, req.(*UpdateJobStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_DoneScraper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DoneScraperReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).DoneScraper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/DoneScraper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).DoneScraper(ctx, req.(*DoneScraperReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_DoneAnalyzer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DoneAnalyzerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).DoneAnalyzer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/DoneAnalyzer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).DoneAnalyzer(ctx, req.(*DoneAnalyzerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_StopJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).StopJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.manager.Manager/StopJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).StopJob(ctx, req.(*StopJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.svc.manager.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNewJob",
			Handler:    _Manager_CreateNewJob_Handler,
		},
		{
			MethodName: "GetJobStatus",
			Handler:    _Manager_GetJobStatus_Handler,
		},
		{
			MethodName: "GetJobList",
			Handler:    _Manager_GetJobList_Handler,
		},
		{
			MethodName: "GetWorkerList",
			Handler:    _Manager_GetWorkerList_Handler,
		},
		{
			MethodName: "UpdateJobStatus",
			Handler:    _Manager_UpdateJobStatus_Handler,
		},
		{
			MethodName: "DoneScraper",
			Handler:    _Manager_DoneScraper_Handler,
		},
		{
			MethodName: "DoneAnalyzer",
			Handler:    _Manager_DoneAnalyzer_Handler,
		},
		{
			MethodName: "StopJob",
			Handler:    _Manager_StopJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/svc/manager/manager.proto",
}
