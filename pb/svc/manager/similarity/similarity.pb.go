// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: pb/svc/manager/similarity.proto

package similarity

import (
	cosine_similarity "github.com/aglide100/dak-keyword/pb/unit/cosine_similarity"
	tfidf "github.com/aglide100/dak-keyword/pb/unit/tfidf"
	vocab "github.com/aglide100/dak-keyword/pb/unit/vocab"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhenSimilarityHavingMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *WhenSimilarityHavingMsgReq) Reset() {
	*x = WhenSimilarityHavingMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenSimilarityHavingMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenSimilarityHavingMsgReq) ProtoMessage() {}

func (x *WhenSimilarityHavingMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenSimilarityHavingMsgReq.ProtoReflect.Descriptor instead.
func (*WhenSimilarityHavingMsgReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{0}
}

func (x *WhenSimilarityHavingMsgReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WhenSimilarityHavingMsgReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WhenSimilarityHavingMsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhenSimilarityHavingMsgRes) Reset() {
	*x = WhenSimilarityHavingMsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenSimilarityHavingMsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenSimilarityHavingMsgRes) ProtoMessage() {}

func (x *WhenSimilarityHavingMsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenSimilarityHavingMsgRes.ProtoReflect.Descriptor instead.
func (*WhenSimilarityHavingMsgRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{1}
}

type WhenSimilarityHavingErrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *WhenSimilarityHavingErrReq) Reset() {
	*x = WhenSimilarityHavingErrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenSimilarityHavingErrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenSimilarityHavingErrReq) ProtoMessage() {}

func (x *WhenSimilarityHavingErrReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenSimilarityHavingErrReq.ProtoReflect.Descriptor instead.
func (*WhenSimilarityHavingErrReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{2}
}

func (x *WhenSimilarityHavingErrReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WhenSimilarityHavingErrReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WhenSimilarityHavingErrRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhenSimilarityHavingErrRes) Reset() {
	*x = WhenSimilarityHavingErrRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenSimilarityHavingErrRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenSimilarityHavingErrRes) ProtoMessage() {}

func (x *WhenSimilarityHavingErrRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenSimilarityHavingErrRes.ProtoReflect.Descriptor instead.
func (*WhenSimilarityHavingErrRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{3}
}

type WhenDoneSimilarityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId string `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
	JobId    string `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (x *WhenDoneSimilarityReq) Reset() {
	*x = WhenDoneSimilarityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenDoneSimilarityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenDoneSimilarityReq) ProtoMessage() {}

func (x *WhenDoneSimilarityReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenDoneSimilarityReq.ProtoReflect.Descriptor instead.
func (*WhenDoneSimilarityReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{4}
}

func (x *WhenDoneSimilarityReq) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WhenDoneSimilarityReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type WhenDoneSimilarityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhenDoneSimilarityRes) Reset() {
	*x = WhenDoneSimilarityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenDoneSimilarityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenDoneSimilarityRes) ProtoMessage() {}

func (x *WhenDoneSimilarityRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenDoneSimilarityRes.ProtoReflect.Descriptor instead.
func (*WhenDoneSimilarityRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{5}
}

func (x *WhenDoneSimilarityRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhenStartSimilarityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WhenStartSimilarityReq) Reset() {
	*x = WhenStartSimilarityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenStartSimilarityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenStartSimilarityReq) ProtoMessage() {}

func (x *WhenStartSimilarityReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenStartSimilarityReq.ProtoReflect.Descriptor instead.
func (*WhenStartSimilarityReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{6}
}

func (x *WhenStartSimilarityReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type WhenStartSimilarityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhenStartSimilarityRes) Reset() {
	*x = WhenStartSimilarityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhenStartSimilarityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenStartSimilarityRes) ProtoMessage() {}

func (x *WhenStartSimilarityRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenStartSimilarityRes.ProtoReflect.Descriptor instead.
func (*WhenStartSimilarityRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{7}
}

func (x *WhenStartSimilarityRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetCosineSimilarityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId string `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	WorkerId  string `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
}

func (x *GetCosineSimilarityReq) Reset() {
	*x = GetCosineSimilarityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosineSimilarityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosineSimilarityReq) ProtoMessage() {}

func (x *GetCosineSimilarityReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosineSimilarityReq.ProtoReflect.Descriptor instead.
func (*GetCosineSimilarityReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{8}
}

func (x *GetCosineSimilarityReq) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetCosineSimilarityReq) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type GetCosineSimilarityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosineSimilarity *cosine_similarity.CosineSimilarity `protobuf:"bytes,1,opt,name=CosineSimilarity,proto3" json:"CosineSimilarity,omitempty"`
}

func (x *GetCosineSimilarityRes) Reset() {
	*x = GetCosineSimilarityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosineSimilarityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosineSimilarityRes) ProtoMessage() {}

func (x *GetCosineSimilarityRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosineSimilarityRes.ProtoReflect.Descriptor instead.
func (*GetCosineSimilarityRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{9}
}

func (x *GetCosineSimilarityRes) GetCosineSimilarity() *cosine_similarity.CosineSimilarity {
	if x != nil {
		return x.CosineSimilarity
	}
	return nil
}

type GetTfidfScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
}

func (x *GetTfidfScoreReq) Reset() {
	*x = GetTfidfScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTfidfScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTfidfScoreReq) ProtoMessage() {}

func (x *GetTfidfScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTfidfScoreReq.ProtoReflect.Descriptor instead.
func (*GetTfidfScoreReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{10}
}

func (x *GetTfidfScoreReq) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type GetTfidfScoreRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tfidf []*tfidf.Tfidf `protobuf:"bytes,1,rep,name=Tfidf,proto3" json:"Tfidf,omitempty"`
}

func (x *GetTfidfScoreRes) Reset() {
	*x = GetTfidfScoreRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTfidfScoreRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTfidfScoreRes) ProtoMessage() {}

func (x *GetTfidfScoreRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTfidfScoreRes.ProtoReflect.Descriptor instead.
func (*GetTfidfScoreRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{11}
}

func (x *GetTfidfScoreRes) GetTfidf() []*tfidf.Tfidf {
	if x != nil {
		return x.Tfidf
	}
	return nil
}

type GetVocabListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
}

func (x *GetVocabListReq) Reset() {
	*x = GetVocabListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVocabListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVocabListReq) ProtoMessage() {}

func (x *GetVocabListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVocabListReq.ProtoReflect.Descriptor instead.
func (*GetVocabListReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{12}
}

func (x *GetVocabListReq) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type GetVocabListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vocab *vocab.Vocab `protobuf:"bytes,1,opt,name=vocab,proto3" json:"vocab,omitempty"`
}

func (x *GetVocabListRes) Reset() {
	*x = GetVocabListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_manager_similarity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVocabListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVocabListRes) ProtoMessage() {}

func (x *GetVocabListRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_manager_similarity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVocabListRes.ProtoReflect.Descriptor instead.
func (*GetVocabListRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_manager_similarity_proto_rawDescGZIP(), []int{13}
}

func (x *GetVocabListRes) GetVocab() *vocab.Vocab {
	if x != nil {
		return x.Vocab
	}
	return nil
}

var File_pb_svc_manager_similarity_proto protoreflect.FileDescriptor

var file_pb_svc_manager_similarity_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x31, 0x70, 0x62,
	0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2f, 0x63, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x70, 0x62, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2f, 0x74, 0x66, 0x69, 0x64, 0x66, 0x2f, 0x74,
	0x66, 0x69, 0x64, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x62, 0x2f, 0x75,
	0x6e, 0x69, 0x74, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x1a, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x1a, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x52, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x15, 0x57, 0x68, 0x65, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x15,
	0x57, 0x68, 0x65, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a,
	0x16, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x57, 0x68, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x6f, 0x73,
	0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x63, 0x6f,
	0x73, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x66, 0x69, 0x64, 0x66, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x66, 0x69, 0x64, 0x66, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x54, 0x66, 0x69, 0x64, 0x66,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x2e, 0x74, 0x66, 0x69, 0x64, 0x66, 0x2e, 0x54, 0x66, 0x69, 0x64, 0x66, 0x52, 0x05, 0x54, 0x66,
	0x69, 0x64, 0x66, 0x22, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x52, 0x05, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x32, 0xee, 0x06, 0x0a, 0x11, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x7b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x31, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x62, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x69, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x66, 0x69, 0x64, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x66,
	0x69, 0x64, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x66, 0x69, 0x64, 0x66,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x13, 0x57, 0x68, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x31, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57,
	0x68, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x78, 0x0a, 0x12, 0x57, 0x68, 0x65, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x44, 0x6f, 0x6e, 0x65,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73,
	0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x44, 0x6f,
	0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x87, 0x01, 0x0a, 0x17, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x12, 0x35, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x35, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57,
	0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x17, 0x57, 0x68,
	0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x67, 0x6c, 0x69, 0x64, 0x65, 0x31, 0x30, 0x30, 0x2f, 0x64, 0x61, 0x6b, 0x2d,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_svc_manager_similarity_proto_rawDescOnce sync.Once
	file_pb_svc_manager_similarity_proto_rawDescData = file_pb_svc_manager_similarity_proto_rawDesc
)

func file_pb_svc_manager_similarity_proto_rawDescGZIP() []byte {
	file_pb_svc_manager_similarity_proto_rawDescOnce.Do(func() {
		file_pb_svc_manager_similarity_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_svc_manager_similarity_proto_rawDescData)
	})
	return file_pb_svc_manager_similarity_proto_rawDescData
}

var file_pb_svc_manager_similarity_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pb_svc_manager_similarity_proto_goTypes = []interface{}{
	(*WhenSimilarityHavingMsgReq)(nil),         // 0: pb.svc.manager.similarity.WhenSimilarityHavingMsgReq
	(*WhenSimilarityHavingMsgRes)(nil),         // 1: pb.svc.manager.similarity.WhenSimilarityHavingMsgRes
	(*WhenSimilarityHavingErrReq)(nil),         // 2: pb.svc.manager.similarity.WhenSimilarityHavingErrReq
	(*WhenSimilarityHavingErrRes)(nil),         // 3: pb.svc.manager.similarity.WhenSimilarityHavingErrRes
	(*WhenDoneSimilarityReq)(nil),              // 4: pb.svc.manager.similarity.WhenDoneSimilarityReq
	(*WhenDoneSimilarityRes)(nil),              // 5: pb.svc.manager.similarity.WhenDoneSimilarityRes
	(*WhenStartSimilarityReq)(nil),             // 6: pb.svc.manager.similarity.WhenStartSimilarityReq
	(*WhenStartSimilarityRes)(nil),             // 7: pb.svc.manager.similarity.WhenStartSimilarityRes
	(*GetCosineSimilarityReq)(nil),             // 8: pb.svc.manager.similarity.GetCosineSimilarityReq
	(*GetCosineSimilarityRes)(nil),             // 9: pb.svc.manager.similarity.GetCosineSimilarityRes
	(*GetTfidfScoreReq)(nil),                   // 10: pb.svc.manager.similarity.GetTfidfScoreReq
	(*GetTfidfScoreRes)(nil),                   // 11: pb.svc.manager.similarity.GetTfidfScoreRes
	(*GetVocabListReq)(nil),                    // 12: pb.svc.manager.similarity.GetVocabListReq
	(*GetVocabListRes)(nil),                    // 13: pb.svc.manager.similarity.GetVocabListRes
	(*cosine_similarity.CosineSimilarity)(nil), // 14: pb.unit.cosine_similarity.CosineSimilarity
	(*tfidf.Tfidf)(nil),                        // 15: pb.unit.tfidf.Tfidf
	(*vocab.Vocab)(nil),                        // 16: pb.unit.vocab.Vocab
}
var file_pb_svc_manager_similarity_proto_depIdxs = []int32{
	14, // 0: pb.svc.manager.similarity.GetCosineSimilarityRes.CosineSimilarity:type_name -> pb.unit.cosine_similarity.CosineSimilarity
	15, // 1: pb.svc.manager.similarity.GetTfidfScoreRes.Tfidf:type_name -> pb.unit.tfidf.Tfidf
	16, // 2: pb.svc.manager.similarity.GetVocabListRes.vocab:type_name -> pb.unit.vocab.Vocab
	12, // 3: pb.svc.manager.similarity.SimilarityService.GetVocabList:input_type -> pb.svc.manager.similarity.GetVocabListReq
	8,  // 4: pb.svc.manager.similarity.SimilarityService.GetCosineSimilarity:input_type -> pb.svc.manager.similarity.GetCosineSimilarityReq
	10, // 5: pb.svc.manager.similarity.SimilarityService.GetTfidfScore:input_type -> pb.svc.manager.similarity.GetTfidfScoreReq
	6,  // 6: pb.svc.manager.similarity.SimilarityService.WhenStartSimilarity:input_type -> pb.svc.manager.similarity.WhenStartSimilarityReq
	4,  // 7: pb.svc.manager.similarity.SimilarityService.WhenDoneSimilarity:input_type -> pb.svc.manager.similarity.WhenDoneSimilarityReq
	2,  // 8: pb.svc.manager.similarity.SimilarityService.WhenSimilarityHavingErr:input_type -> pb.svc.manager.similarity.WhenSimilarityHavingErrReq
	0,  // 9: pb.svc.manager.similarity.SimilarityService.WhenSimilarityHavingMsg:input_type -> pb.svc.manager.similarity.WhenSimilarityHavingMsgReq
	13, // 10: pb.svc.manager.similarity.SimilarityService.GetVocabList:output_type -> pb.svc.manager.similarity.GetVocabListRes
	9,  // 11: pb.svc.manager.similarity.SimilarityService.GetCosineSimilarity:output_type -> pb.svc.manager.similarity.GetCosineSimilarityRes
	11, // 12: pb.svc.manager.similarity.SimilarityService.GetTfidfScore:output_type -> pb.svc.manager.similarity.GetTfidfScoreRes
	7,  // 13: pb.svc.manager.similarity.SimilarityService.WhenStartSimilarity:output_type -> pb.svc.manager.similarity.WhenStartSimilarityRes
	5,  // 14: pb.svc.manager.similarity.SimilarityService.WhenDoneSimilarity:output_type -> pb.svc.manager.similarity.WhenDoneSimilarityRes
	3,  // 15: pb.svc.manager.similarity.SimilarityService.WhenSimilarityHavingErr:output_type -> pb.svc.manager.similarity.WhenSimilarityHavingErrRes
	1,  // 16: pb.svc.manager.similarity.SimilarityService.WhenSimilarityHavingMsg:output_type -> pb.svc.manager.similarity.WhenSimilarityHavingMsgRes
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pb_svc_manager_similarity_proto_init() }
func file_pb_svc_manager_similarity_proto_init() {
	if File_pb_svc_manager_similarity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_svc_manager_similarity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenSimilarityHavingMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenSimilarityHavingMsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenSimilarityHavingErrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenSimilarityHavingErrRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenDoneSimilarityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenDoneSimilarityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenStartSimilarityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhenStartSimilarityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosineSimilarityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosineSimilarityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTfidfScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTfidfScoreRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVocabListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_manager_similarity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVocabListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_svc_manager_similarity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_svc_manager_similarity_proto_goTypes,
		DependencyIndexes: file_pb_svc_manager_similarity_proto_depIdxs,
		MessageInfos:      file_pb_svc_manager_similarity_proto_msgTypes,
	}.Build()
	File_pb_svc_manager_similarity_proto = out.File
	file_pb_svc_manager_similarity_proto_rawDesc = nil
	file_pb_svc_manager_similarity_proto_goTypes = nil
	file_pb_svc_manager_similarity_proto_depIdxs = nil
}
