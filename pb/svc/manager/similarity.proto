syntax = "proto3";

package pb.svc.manager.similarity;
option go_package = "github.com/aglide100/dak-keyword/pb/svc/manager/similarity";

service SimilarityService {
    rpc GetVocabList(GetVocabListReq) returns (GetVocabListRes);
    rpc GetSimilarity(GetSimilarityReq) returns (GetSimilarityRes);
    rpc WhenStartSimilarity(WhenStartSimilarityReq) returns (WhenStartSimilarityRes);
    rpc WhenDoneSimilarity(WhenDoneSimilarityReq) returns (WhenDoneSimilarityRes);
    rpc WhenSimilarityHavingErr(WhenSimilarityHavingErrReq) returns (WhenSimilarityHavingErrRes);
    rpc WhenSimilarityHavingMsg(WhenSimilarityHavingMsgReq) returns (WhenSimilarityHavingMsgRes);
    
}
message WhenSimilarityHavingMsgReq {
    string id = 1;
    string msg = 2;
}

message WhenSimilarityHavingMsgRes {
    
}


message WhenSimilarityHavingErrReq {
    string id = 1;
    string msg = 2;
}

message WhenSimilarityHavingErrRes {
    
}


message WhenDoneSimilarityReq {
    string workerId = 1;
    string jobId = 2;
}

message WhenDoneSimilarityRes {
    string result = 1;
}

message WhenStartSimilarityReq {
    string id = 1;
}

message WhenStartSimilarityRes {
    string result = 1;
}

message GetSimilarityReq {

}

message GetSimilarityRes {
    
}

message GetVocabListReq {

}

message GetVocabListRes {

}
