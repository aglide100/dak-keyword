syntax = "proto3";

package pb.svc.manager.job;
option go_package = "github.com/aglide100/dak-keyword/pb/svc/manager/job";

import "pb/unit/job/job.proto";

service JobService {
    rpc CreateNewJob(CreateNewJobReq) returns (CreateNewJobRes);
    rpc ReRunJob(ReRunJobReq) returns (ReRunJobRes);
    rpc GetJobStatus(GetJobStatusReq) returns (GetJobStatusRes);
    rpc GetJobList(GetJobListReq) returns (GetJobListRes);
    rpc GetJobIsReRun(GetJobIsReRunReq) returns (GetJobIsReRunRes);
    rpc StopJob(StopJobReq) returns (StopJobRes);
    rpc UpdateJobStatus(UpdateJobStatusReq) returns (UpdateJobStatusRes);
}

message GetJobIsReRunReq {
    string id = 1;
}

message GetJobIsReRunRes {
    bool result = 2;
}

message CreateNewJobReq {
    string keyword = 1;
    string owner = 2;
    string accessCode = 3;
}

message CreateNewJobRes {
    string msg = 1;
}

message ReRunJobReq {
    string id = 1;
    bool schedule = 2;
    string accessCode = 3;
}

message ReRunJobRes {
    string msg = 1;
}

message GetJobStatusReq {
    string id = 1;
    string owner = 2;
}

message GetJobStatusRes {
    string status = 1;
}

message StopJobReq {
    string id = 1;
}

message StopJobRes {
    string result = 1;
}

message UpdateJobStatusReq {
    string id = 1;
    string status = 2;
}

message UpdateJobStatusRes {
    string result = 1;
}

message GetJobListReq {}

message GetJobListRes {
    repeated unit.job.Job Job = 1;
}