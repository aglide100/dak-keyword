version: "3.5"
x-services-volume: &services-volume
    type: bind

services:
    db:
        image: ghcr.io/aglide100/dak-keyword-db:latest
        # image: db
        # volumes:
        #   - <<: *services-volume
        #     # source: ${HOST}/postgres
        #     source: /tmp/dak-keyword
        #     target: /var/lib/postgres
        env_file:
            - ./env/db.env
        ports:
            - 5432:5432
        networks:
            - keyword_net
        deploy:
            placement:
                constraints: [node.role==manager]
    apid:
        image: ghcr.io/aglide100/dak-keyword-apid:latest
        # image: apid
        env_file:
            - ./env/dbConfig.env
            - ./env/tweet_secret.env
        networks:
            - keyword_net
        secrets:
            - crt-file
            - key-file
        ports:
            - 50011:50011
            - 50010:50010
        depends_on:
            - db
        deploy:
            placement:
                constraints: [node.role==manager]

    provisioned:
        image: ghcr.io/aglide100/dak-keyword-provisioned:latest
        # image: provisioned
        env_file:
            - ./env/dbConfig.env
        networks:
            - keyword_net
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 50012:50012
        depends_on:
            - db
        # deploy:
        #     placement:
        #         constraints: [node.role==manager]

    webd:
        image: ghcr.io/aglide100/dak-keyword-ui:latest
        # image: node
        ports:
            - 3000:3000
        networks:
            - keyword_net
            - traefik-network
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-network
                - traefik.http.routers.keyword-node.rule=Host(`keyword.${Domain1}`)
                - traefik.http.routers.keyword-node.middlewares=redirect-to-https
                - traefik.http.routers.keyword-node.entrypoints=web
                - traefik.http.services.keyword-node.loadbalancer.server.port=3000
                - traefik.http.routers.keyword-node--https.rule=Host(`keyword.${Domain1}`)
                - traefik.http.routers.keyword-node--https.tls=true
                - traefik.http.routers.keyword-node--https.tls.certresolver=myresolver
                - traefik.http.routers.keyword-node--https.entrypoints=websecure

    # viz:
    #     image: dockersamples/visualizer
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     networks:
    #         - keyword_net
    #     ports:
    #         - 1999:8080

secrets:
    crt-file:
        file: ./keys/server.crt
    key-file:
        file: ./keys/server.key
    # firebase-key:
    #     external: true

networks:
    keyword_net:
        driver: overlay
    traefik-network:
        external: true

volumes:
    keys:
        external:
            name: keys
