/**
 * @fileoverview gRPC-Web generated client stub for pb.svc.provision
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: pb/svc/provision/provision.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.pb = {};
proto.pb.svc = {};
proto.pb.svc.provision = require('./provision_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.provision.ProvisionClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.provision.ProvisionPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.CreateScraperReq,
 *   !proto.pb.svc.provision.CreateScraperRes>}
 */
const methodDescriptor_Provision_CreateScraper = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/CreateScraper',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.CreateScraperReq,
  proto.pb.svc.provision.CreateScraperRes,
  /**
   * @param {!proto.pb.svc.provision.CreateScraperReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.CreateScraperRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.CreateScraperReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.CreateScraperRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.CreateScraperRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.createScraper =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/CreateScraper',
      request,
      metadata || {},
      methodDescriptor_Provision_CreateScraper,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.CreateScraperReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.CreateScraperRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.createScraper =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/CreateScraper',
      request,
      metadata || {},
      methodDescriptor_Provision_CreateScraper);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.CreateAnalyzerReq,
 *   !proto.pb.svc.provision.CreateAnalyzerRes>}
 */
const methodDescriptor_Provision_CreateAnalyzer = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/CreateAnalyzer',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.CreateAnalyzerReq,
  proto.pb.svc.provision.CreateAnalyzerRes,
  /**
   * @param {!proto.pb.svc.provision.CreateAnalyzerReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.CreateAnalyzerRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.CreateAnalyzerReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.CreateAnalyzerRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.CreateAnalyzerRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.createAnalyzer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/CreateAnalyzer',
      request,
      metadata || {},
      methodDescriptor_Provision_CreateAnalyzer,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.CreateAnalyzerReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.CreateAnalyzerRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.createAnalyzer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/CreateAnalyzer',
      request,
      metadata || {},
      methodDescriptor_Provision_CreateAnalyzer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.GetScraperStatusReq,
 *   !proto.pb.svc.provision.GetScraperStatusRes>}
 */
const methodDescriptor_Provision_GetScraperStatus = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/GetScraperStatus',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.GetScraperStatusReq,
  proto.pb.svc.provision.GetScraperStatusRes,
  /**
   * @param {!proto.pb.svc.provision.GetScraperStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.GetScraperStatusRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.GetScraperStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.GetScraperStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.GetScraperStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.getScraperStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/GetScraperStatus',
      request,
      metadata || {},
      methodDescriptor_Provision_GetScraperStatus,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.GetScraperStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.GetScraperStatusRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.getScraperStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/GetScraperStatus',
      request,
      metadata || {},
      methodDescriptor_Provision_GetScraperStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.GetAnalyzerStatusReq,
 *   !proto.pb.svc.provision.GetAnalyzerStatusRes>}
 */
const methodDescriptor_Provision_GetAnalyzerStatus = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/GetAnalyzerStatus',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.GetAnalyzerStatusReq,
  proto.pb.svc.provision.GetAnalyzerStatusRes,
  /**
   * @param {!proto.pb.svc.provision.GetAnalyzerStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.GetAnalyzerStatusRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.GetAnalyzerStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.GetAnalyzerStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.GetAnalyzerStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.getAnalyzerStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/GetAnalyzerStatus',
      request,
      metadata || {},
      methodDescriptor_Provision_GetAnalyzerStatus,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.GetAnalyzerStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.GetAnalyzerStatusRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.getAnalyzerStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/GetAnalyzerStatus',
      request,
      metadata || {},
      methodDescriptor_Provision_GetAnalyzerStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.RemoveScraperReq,
 *   !proto.pb.svc.provision.RemoveScraperRes>}
 */
const methodDescriptor_Provision_RemoveScraper = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/RemoveScraper',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.RemoveScraperReq,
  proto.pb.svc.provision.RemoveScraperRes,
  /**
   * @param {!proto.pb.svc.provision.RemoveScraperReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.RemoveScraperRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.RemoveScraperReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.RemoveScraperRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.RemoveScraperRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.removeScraper =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/RemoveScraper',
      request,
      metadata || {},
      methodDescriptor_Provision_RemoveScraper,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.RemoveScraperReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.RemoveScraperRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.removeScraper =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/RemoveScraper',
      request,
      metadata || {},
      methodDescriptor_Provision_RemoveScraper);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.provision.RemoveAnalyzerReq,
 *   !proto.pb.svc.provision.RemoveAnalyzerRes>}
 */
const methodDescriptor_Provision_RemoveAnalyzer = new grpc.web.MethodDescriptor(
  '/pb.svc.provision.Provision/RemoveAnalyzer',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.provision.RemoveAnalyzerReq,
  proto.pb.svc.provision.RemoveAnalyzerRes,
  /**
   * @param {!proto.pb.svc.provision.RemoveAnalyzerReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.provision.RemoveAnalyzerRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.provision.RemoveAnalyzerReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.provision.RemoveAnalyzerRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.provision.RemoveAnalyzerRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.provision.ProvisionClient.prototype.removeAnalyzer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.provision.Provision/RemoveAnalyzer',
      request,
      metadata || {},
      methodDescriptor_Provision_RemoveAnalyzer,
      callback);
};


/**
 * @param {!proto.pb.svc.provision.RemoveAnalyzerReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.provision.RemoveAnalyzerRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.provision.ProvisionPromiseClient.prototype.removeAnalyzer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.provision.Provision/RemoveAnalyzer',
      request,
      metadata || {},
      methodDescriptor_Provision_RemoveAnalyzer);
};


module.exports = proto.pb.svc.provision;

