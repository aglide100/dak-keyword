// source: pb/svc/manager/article.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var pb_unit_article_article_pb = require('../../../pb/unit/article/article_pb.js');
goog.object.extend(proto, pb_unit_article_article_pb);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleCountByDayReq', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleCountByDayRes', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleCountByHourReq', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleCountByHourRes', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleInfoReq', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleInfoRes', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleListReq', null, global);
goog.exportSymbol('proto.pb.svc.manager.article.GetArticleListRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleCountByDayReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleCountByDayReq.displayName = 'proto.pb.svc.manager.article.GetArticleCountByDayReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.svc.manager.article.GetArticleCountByDayRes.repeatedFields_, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleCountByDayRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleCountByDayRes.displayName = 'proto.pb.svc.manager.article.GetArticleCountByDayRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleCountByHourReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleCountByHourReq.displayName = 'proto.pb.svc.manager.article.GetArticleCountByHourReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.svc.manager.article.GetArticleCountByHourRes.repeatedFields_, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleCountByHourRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleCountByHourRes.displayName = 'proto.pb.svc.manager.article.GetArticleCountByHourRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleListReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleListReq.displayName = 'proto.pb.svc.manager.article.GetArticleListReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleListRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.svc.manager.article.GetArticleListRes.repeatedFields_, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleListRes.displayName = 'proto.pb.svc.manager.article.GetArticleListRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleInfoReq.displayName = 'proto.pb.svc.manager.article.GetArticleInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.svc.manager.article.GetArticleInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.svc.manager.article.GetArticleInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.svc.manager.article.GetArticleInfoRes.displayName = 'proto.pb.svc.manager.article.GetArticleInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleCountByDayReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayReq}
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleCountByDayReq;
  return proto.pb.svc.manager.article.GetArticleCountByDayReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayReq}
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleCountByDayReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayReq} returns this
 */
proto.pb.svc.manager.article.GetArticleCountByDayReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleCountByDayRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    articlecountList: jspb.Message.toObjectList(msg.getArticlecountList(),
    pb_unit_article_article_pb.ArticleCount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayRes}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleCountByDayRes;
  return proto.pb.svc.manager.article.GetArticleCountByDayRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayRes}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pb_unit_article_article_pb.ArticleCount;
      reader.readMessage(value,pb_unit_article_article_pb.ArticleCount.deserializeBinaryFromReader);
      msg.addArticlecount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleCountByDayRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticlecountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      pb_unit_article_article_pb.ArticleCount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.unit.article.ArticleCount ArticleCount = 1;
 * @return {!Array<!proto.pb.unit.article.ArticleCount>}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.getArticlecountList = function() {
  return /** @type{!Array<!proto.pb.unit.article.ArticleCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, pb_unit_article_article_pb.ArticleCount, 1));
};


/**
 * @param {!Array<!proto.pb.unit.article.ArticleCount>} value
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayRes} returns this
*/
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.setArticlecountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.unit.article.ArticleCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.unit.article.ArticleCount}
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.addArticlecount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.unit.article.ArticleCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByDayRes} returns this
 */
proto.pb.svc.manager.article.GetArticleCountByDayRes.prototype.clearArticlecountList = function() {
  return this.setArticlecountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleCountByHourReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourReq}
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleCountByHourReq;
  return proto.pb.svc.manager.article.GetArticleCountByHourReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourReq}
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleCountByHourReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourReq} returns this
 */
proto.pb.svc.manager.article.GetArticleCountByHourReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleCountByHourRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    articlecountList: jspb.Message.toObjectList(msg.getArticlecountList(),
    pb_unit_article_article_pb.ArticleCount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourRes}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleCountByHourRes;
  return proto.pb.svc.manager.article.GetArticleCountByHourRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourRes}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pb_unit_article_article_pb.ArticleCount;
      reader.readMessage(value,pb_unit_article_article_pb.ArticleCount.deserializeBinaryFromReader);
      msg.addArticlecount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleCountByHourRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticlecountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      pb_unit_article_article_pb.ArticleCount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.unit.article.ArticleCount ArticleCount = 1;
 * @return {!Array<!proto.pb.unit.article.ArticleCount>}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.getArticlecountList = function() {
  return /** @type{!Array<!proto.pb.unit.article.ArticleCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, pb_unit_article_article_pb.ArticleCount, 1));
};


/**
 * @param {!Array<!proto.pb.unit.article.ArticleCount>} value
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourRes} returns this
*/
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.setArticlecountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.unit.article.ArticleCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.unit.article.ArticleCount}
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.addArticlecount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.unit.article.ArticleCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.svc.manager.article.GetArticleCountByHourRes} returns this
 */
proto.pb.svc.manager.article.GetArticleCountByHourRes.prototype.clearArticlecountList = function() {
  return this.setArticlecountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleListReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleListReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleListReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleListReq}
 */
proto.pb.svc.manager.article.GetArticleListReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleListReq;
  return proto.pb.svc.manager.article.GetArticleListReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleListReq}
 */
proto.pb.svc.manager.article.GetArticleListReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleListReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.svc.manager.article.GetArticleListReq} returns this
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.svc.manager.article.GetArticleListReq} returns this
 */
proto.pb.svc.manager.article.GetArticleListReq.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.svc.manager.article.GetArticleListRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleListRes.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleListRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleListRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleListRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    articleList: jspb.Message.toObjectList(msg.getArticleList(),
    pb_unit_article_article_pb.Article.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleListRes}
 */
proto.pb.svc.manager.article.GetArticleListRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleListRes;
  return proto.pb.svc.manager.article.GetArticleListRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleListRes}
 */
proto.pb.svc.manager.article.GetArticleListRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pb_unit_article_article_pb.Article;
      reader.readMessage(value,pb_unit_article_article_pb.Article.deserializeBinaryFromReader);
      msg.addArticle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleListRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleListRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      pb_unit_article_article_pb.Article.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.unit.article.Article Article = 1;
 * @return {!Array<!proto.pb.unit.article.Article>}
 */
proto.pb.svc.manager.article.GetArticleListRes.prototype.getArticleList = function() {
  return /** @type{!Array<!proto.pb.unit.article.Article>} */ (
    jspb.Message.getRepeatedWrapperField(this, pb_unit_article_article_pb.Article, 1));
};


/**
 * @param {!Array<!proto.pb.unit.article.Article>} value
 * @return {!proto.pb.svc.manager.article.GetArticleListRes} returns this
*/
proto.pb.svc.manager.article.GetArticleListRes.prototype.setArticleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.unit.article.Article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.unit.article.Article}
 */
proto.pb.svc.manager.article.GetArticleListRes.prototype.addArticle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.unit.article.Article, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.svc.manager.article.GetArticleListRes} returns this
 */
proto.pb.svc.manager.article.GetArticleListRes.prototype.clearArticleList = function() {
  return this.setArticleList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleInfoReq}
 */
proto.pb.svc.manager.article.GetArticleInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleInfoReq;
  return proto.pb.svc.manager.article.GetArticleInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleInfoReq}
 */
proto.pb.svc.manager.article.GetArticleInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.svc.manager.article.GetArticleInfoReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.svc.manager.article.GetArticleInfoReq} returns this
 */
proto.pb.svc.manager.article.GetArticleInfoReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.svc.manager.article.GetArticleInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.svc.manager.article.GetArticleInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagecount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.svc.manager.article.GetArticleInfoRes}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.svc.manager.article.GetArticleInfoRes;
  return proto.pb.svc.manager.article.GetArticleInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.svc.manager.article.GetArticleInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.svc.manager.article.GetArticleInfoRes}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagecount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.svc.manager.article.GetArticleInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.svc.manager.article.GetArticleInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.svc.manager.article.GetArticleInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPagecount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 totalCount = 1;
 * @return {number}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.svc.manager.article.GetArticleInfoRes} returns this
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 pageCount = 2;
 * @return {number}
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.getPagecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.svc.manager.article.GetArticleInfoRes} returns this
 */
proto.pb.svc.manager.article.GetArticleInfoRes.prototype.setPagecount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.pb.svc.manager.article);
