/**
 * @fileoverview gRPC-Web generated client stub for pb.svc.manager.article
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: pb/svc/manager/article.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var pb_unit_article_article_pb = require('../../../pb/unit/article/article_pb.js')
const proto = {};
proto.pb = {};
proto.pb.svc = {};
proto.pb.svc.manager = {};
proto.pb.svc.manager.article = require('./article_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.manager.article.ArticleServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.manager.article.ArticleServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.article.GetArticleInfoReq,
 *   !proto.pb.svc.manager.article.GetArticleInfoRes>}
 */
const methodDescriptor_ArticleService_GetArticleInfo = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.article.ArticleService/GetArticleInfo',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.article.GetArticleInfoReq,
  proto.pb.svc.manager.article.GetArticleInfoRes,
  /**
   * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.article.GetArticleInfoRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.article.GetArticleInfoRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.article.GetArticleInfoRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.article.ArticleServiceClient.prototype.getArticleInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleInfo',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleInfo,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.article.GetArticleInfoReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.article.GetArticleInfoRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.article.ArticleServicePromiseClient.prototype.getArticleInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleInfo',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.article.GetArticleListReq,
 *   !proto.pb.svc.manager.article.GetArticleListRes>}
 */
const methodDescriptor_ArticleService_GetArticleList = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.article.ArticleService/GetArticleList',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.article.GetArticleListReq,
  proto.pb.svc.manager.article.GetArticleListRes,
  /**
   * @param {!proto.pb.svc.manager.article.GetArticleListReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.article.GetArticleListRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.article.GetArticleListReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.article.GetArticleListRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.article.GetArticleListRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.article.ArticleServiceClient.prototype.getArticleList =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleList',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleList,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.article.GetArticleListReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.article.GetArticleListRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.article.ArticleServicePromiseClient.prototype.getArticleList =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleList',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleList);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.article.GetArticleCountByHourReq,
 *   !proto.pb.svc.manager.article.GetArticleCountByHourRes>}
 */
const methodDescriptor_ArticleService_GetArticleCountByHour = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.article.ArticleService/GetArticleCountByHour',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.article.GetArticleCountByHourReq,
  proto.pb.svc.manager.article.GetArticleCountByHourRes,
  /**
   * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.article.GetArticleCountByHourRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.article.GetArticleCountByHourRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.article.GetArticleCountByHourRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.article.ArticleServiceClient.prototype.getArticleCountByHour =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleCountByHour',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleCountByHour,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.article.GetArticleCountByHourReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.article.GetArticleCountByHourRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.article.ArticleServicePromiseClient.prototype.getArticleCountByHour =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleCountByHour',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleCountByHour);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.article.GetArticleCountByDayReq,
 *   !proto.pb.svc.manager.article.GetArticleCountByDayRes>}
 */
const methodDescriptor_ArticleService_GetArticleCountByDay = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.article.ArticleService/GetArticleCountByDay',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.article.GetArticleCountByDayReq,
  proto.pb.svc.manager.article.GetArticleCountByDayRes,
  /**
   * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.article.GetArticleCountByDayRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.article.GetArticleCountByDayRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.article.GetArticleCountByDayRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.article.ArticleServiceClient.prototype.getArticleCountByDay =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleCountByDay',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleCountByDay,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.article.GetArticleCountByDayReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.article.GetArticleCountByDayRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.article.ArticleServicePromiseClient.prototype.getArticleCountByDay =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.article.ArticleService/GetArticleCountByDay',
      request,
      metadata || {},
      methodDescriptor_ArticleService_GetArticleCountByDay);
};


module.exports = proto.pb.svc.manager.article;

