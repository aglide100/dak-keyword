/**
 * @fileoverview gRPC-Web generated client stub for pb.svc.manager.job
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: pb/svc/manager/job.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var pb_unit_job_job_pb = require('../../../pb/unit/job/job_pb.js')
const proto = {};
proto.pb = {};
proto.pb.svc = {};
proto.pb.svc.manager = {};
proto.pb.svc.manager.job = require('./job_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.manager.job.JobServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pb.svc.manager.job.JobServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.CreateNewJobReq,
 *   !proto.pb.svc.manager.job.CreateNewJobRes>}
 */
const methodDescriptor_JobService_CreateNewJob = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/CreateNewJob',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.CreateNewJobReq,
  proto.pb.svc.manager.job.CreateNewJobRes,
  /**
   * @param {!proto.pb.svc.manager.job.CreateNewJobReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.CreateNewJobRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.CreateNewJobReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.CreateNewJobRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.CreateNewJobRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.createNewJob =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/CreateNewJob',
      request,
      metadata || {},
      methodDescriptor_JobService_CreateNewJob,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.CreateNewJobReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.CreateNewJobRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.createNewJob =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/CreateNewJob',
      request,
      metadata || {},
      methodDescriptor_JobService_CreateNewJob);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.ReRunJobReq,
 *   !proto.pb.svc.manager.job.ReRunJobRes>}
 */
const methodDescriptor_JobService_ReRunJob = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/ReRunJob',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.ReRunJobReq,
  proto.pb.svc.manager.job.ReRunJobRes,
  /**
   * @param {!proto.pb.svc.manager.job.ReRunJobReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.ReRunJobRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.ReRunJobReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.ReRunJobRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.ReRunJobRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.reRunJob =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/ReRunJob',
      request,
      metadata || {},
      methodDescriptor_JobService_ReRunJob,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.ReRunJobReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.ReRunJobRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.reRunJob =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/ReRunJob',
      request,
      metadata || {},
      methodDescriptor_JobService_ReRunJob);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.GetJobStatusReq,
 *   !proto.pb.svc.manager.job.GetJobStatusRes>}
 */
const methodDescriptor_JobService_GetJobStatus = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/GetJobStatus',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.GetJobStatusReq,
  proto.pb.svc.manager.job.GetJobStatusRes,
  /**
   * @param {!proto.pb.svc.manager.job.GetJobStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.GetJobStatusRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.GetJobStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.GetJobStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.GetJobStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.getJobStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobStatus',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobStatus,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.GetJobStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.GetJobStatusRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.getJobStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobStatus',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.GetJobListReq,
 *   !proto.pb.svc.manager.job.GetJobListRes>}
 */
const methodDescriptor_JobService_GetJobList = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/GetJobList',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.GetJobListReq,
  proto.pb.svc.manager.job.GetJobListRes,
  /**
   * @param {!proto.pb.svc.manager.job.GetJobListReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.GetJobListRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.GetJobListReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.GetJobListRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.GetJobListRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.getJobList =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobList',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobList,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.GetJobListReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.GetJobListRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.getJobList =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobList',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobList);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.GetJobIsReRunReq,
 *   !proto.pb.svc.manager.job.GetJobIsReRunRes>}
 */
const methodDescriptor_JobService_GetJobIsReRun = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/GetJobIsReRun',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.GetJobIsReRunReq,
  proto.pb.svc.manager.job.GetJobIsReRunRes,
  /**
   * @param {!proto.pb.svc.manager.job.GetJobIsReRunReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.GetJobIsReRunRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.GetJobIsReRunReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.GetJobIsReRunRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.GetJobIsReRunRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.getJobIsReRun =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobIsReRun',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobIsReRun,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.GetJobIsReRunReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.GetJobIsReRunRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.getJobIsReRun =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/GetJobIsReRun',
      request,
      metadata || {},
      methodDescriptor_JobService_GetJobIsReRun);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.StopJobReq,
 *   !proto.pb.svc.manager.job.StopJobRes>}
 */
const methodDescriptor_JobService_StopJob = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/StopJob',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.StopJobReq,
  proto.pb.svc.manager.job.StopJobRes,
  /**
   * @param {!proto.pb.svc.manager.job.StopJobReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.StopJobRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.StopJobReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.StopJobRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.StopJobRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.stopJob =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/StopJob',
      request,
      metadata || {},
      methodDescriptor_JobService_StopJob,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.StopJobReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.StopJobRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.stopJob =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/StopJob',
      request,
      metadata || {},
      methodDescriptor_JobService_StopJob);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pb.svc.manager.job.UpdateJobStatusReq,
 *   !proto.pb.svc.manager.job.UpdateJobStatusRes>}
 */
const methodDescriptor_JobService_UpdateJobStatus = new grpc.web.MethodDescriptor(
  '/pb.svc.manager.job.JobService/UpdateJobStatus',
  grpc.web.MethodType.UNARY,
  proto.pb.svc.manager.job.UpdateJobStatusReq,
  proto.pb.svc.manager.job.UpdateJobStatusRes,
  /**
   * @param {!proto.pb.svc.manager.job.UpdateJobStatusReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pb.svc.manager.job.UpdateJobStatusRes.deserializeBinary
);


/**
 * @param {!proto.pb.svc.manager.job.UpdateJobStatusReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pb.svc.manager.job.UpdateJobStatusRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pb.svc.manager.job.UpdateJobStatusRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pb.svc.manager.job.JobServiceClient.prototype.updateJobStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/UpdateJobStatus',
      request,
      metadata || {},
      methodDescriptor_JobService_UpdateJobStatus,
      callback);
};


/**
 * @param {!proto.pb.svc.manager.job.UpdateJobStatusReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pb.svc.manager.job.UpdateJobStatusRes>}
 *     Promise that resolves to the response
 */
proto.pb.svc.manager.job.JobServicePromiseClient.prototype.updateJobStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pb.svc.manager.job.JobService/UpdateJobStatus',
      request,
      metadata || {},
      methodDescriptor_JobService_UpdateJobStatus);
};


module.exports = proto.pb.svc.manager.job;

